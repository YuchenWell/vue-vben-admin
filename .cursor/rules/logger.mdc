---
description: 
globs: 
alwaysApply: false
---
# 日志规则

## 日志格式化规范

- 使用chalk库进行终端颜色增强，提高日志可读性
- 日志分为四种类型：INFO、DONE、WARN、ERROR，分别使用不同背景色标签区分
- 日志标签使用背景色块展示，例如 `chalk.bgBlue(' INFO ')`，标签文本两侧添加空格增加可读性
- 日志内容使用对应的前景色，保持视觉一致性
- 根据linter规则，避免使用console.log，优先使用console.warn和console.error
- 日志格式统一为: `${带背景色的标签} ${带前景色的消息内容}`

## 颜色规范

- INFO: 蓝色背景标签，青色消息内容
- DONE: 绿色背景标签，亮绿色消息内容
- WARN: 黄色背景标签，亮黄色消息内容
- ERROR: 红色背景标签，亮红色消息内容

## 实现位置

日志工具已实现在 `internal/node-utils/src/logger.ts` 中，提供了以下导出：

- `chalk`: 颜色库实例
- `createColorfulLogger`: 创建自定义日志工具的工厂函数
- `logger`: 默认的日志工具实例（基于console）

## 适用范围

此日志工具**仅适用于Node.js环境**，如Electron主进程、构建脚本等。不适用于浏览器环境，因为chalk库依赖于Node.js的终端功能。

## 使用示例

```typescript
// 导入默认日志工具
import { logger } from '@vben/node-utils';

// 在Electron主进程中，可以从utils中导入
import { logger } from '/@/utils';

// 使用日志工具
logger.info('这是一条信息');
logger.success('操作成功');
logger.warn('警告信息');
logger.error('错误信息', new Error('错误详情'));

// 或者创建自定义日志工具
import { createColorfulLogger } from 'internal/node-utils';

const customLogger = createColorfulLogger(yourLoggerInstance);
customLogger.info('自定义日志实例');
```

## 使用建议

- 保持消息简洁明了
- 重要参数使用chalk.bold()或其他强调方式突出显示
- 在关键流程节点使用success记录成功状态
- 确保错误信息提供足够的上下文以便调试